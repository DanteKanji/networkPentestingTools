#!/usr/bin/env python

import subprocess
import optparse
import random
import string
import re

def randomMAC():
    subset = string.hexdigits.lower()
    randMAC = ''
    for i in range(6):
        randMAC+=''.join((random.choice(subset) for i in range(2)))
        if i !=5:
            randMAC+=":"
    return randMAC
def get_arguments():
    parser = optparse.OptionParser()
    parser.add_option("-i", "--interface", dest="interface", help="Interface that will have its MAC changed")
    parser.add_option("-m", "--mac", dest="newMac", help="The new MAC for the interface")
    parser.add_option("-r", "--random", action="store_true", dest="rando", help="Create a random MAC address for the interface")
    (options, arguments) = parser.parse_args()
    if not options.interface:
        # code to handle error
        parser.error("[-] Please specifiy an interface, use --help for more information.")
    if options.rando:
        options.newMac = randomMAC()
    elif not options.newMac:
        #code to handle error
        parser.error("[-] Please specify a new MAC, use --help for more information.")
    return options
def changeMAC(interface, newMAC):
    print("[+] Changing MAC address for " + interface + " to " + newMAC)
    subprocess.call(["ifconfig", interface, "down"])
    subprocess.call(["ifconfig", interface, "hw", "ether", newMAC])
    subprocess.call(["ifconfig", interface, "up"])
def macCheck(interface):
    ifconfigResult = subprocess.check_output(["ifconfig", interface])
    macAddySearchResult = re.search(r"\w\w:\w\w:\w\w:\w\w:\w\w:\w\w", str(ifconfigResult))
    if macAddySearchResult:
        return macAddySearchResult.group(0)
    else:
        print("[-] Could not read MAC address.")

options = get_arguments()
currentMAC = macCheck(options.interface)
print("Current MAC = " + str(currentMAC))
changeMAC(options.interface, options.newMac)

currentMAC = macCheck(options.interface)
if options.newMac == currentMAC:
    print("[+] MAC changed successfully to "+currentMAC)
else:
    print("[-] MAC change failed.")
